<?php

namespace Tests\Unit;

use App\Models\Group;
use App\Models\GroupSession;
use App\Models\Session;
use App\Models\User;
use Carbon\Carbon;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class GroupModelTest extends TestCase
{
    use RefreshDatabase;

    protected Group $group;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->group = factory(Group::class)->create(['user_id' => factory(User::class)->create()]);
    }

    /** @test */
    public function it_belongs_to_a_user()
    {
        $this->assertInstanceOf(User::class, $this->group->user);
    }

    /** @test */
    public function it_has_many_sessions()
    {
        $this->assertEmpty($this->group->sessions);

        factory(Session::class)->create(['group_id' => $this->group]);

        $this->assertNotEmpty($this->group->fresh()->sessions);
    }

    /** @test */
    public function it_can_have_group_sessions()
    {
        $this->assertEmpty($this->group->groupSessions);

        $session = factory(Session::class)->create(['group_id' => $this->group]);

        GroupSession::query()->create([
            'group_id' => $this->group->id,
            'session_id' => $session->id,
            'date' => Carbon::today(),
        ]);

        $this->assertNotEmpty($this->group->fresh()->groupSessions);
    }
}
