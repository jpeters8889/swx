<?php

namespace Tests\Unit;

use App\Models\Group;
use App\Models\GroupSession;
use App\Models\Member;
use App\Models\Session;
use Carbon\Carbon;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class GroupSessionsModelTest extends TestCase
{
    use RefreshDatabase;

    protected Group $group;
    protected Session $session;
    protected GroupSession $groupSession;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->group = factory(Group::class)->create();
        $this->session = factory(Session::class)->create(['group_id' => $this->group->id]);

        $this->groupSession = GroupSession::query()->create([
           'group_id' => $this->group->id,
           'session_id' => $this->session->id,
           'date' => Carbon::today(),
        ]);
    }

    /** @test */
    public function it_has_a_group()
    {
        $this->assertInstanceOf(Group::class, $this->groupSession->group);
        $this->assertTrue($this->group->is($this->groupSession->group));
    }

    /** @test */
    public function it_has_a_session()
    {
        $this->assertInstanceOf(Session::class, $this->groupSession->session);
        $this->assertTrue($this->session->is($this->groupSession->session));
    }

    /** @test */
    public function it_can_add_members()
    {
        $this->assertEmpty($this->groupSession->members);

        $this->groupSession->addMember(factory(Member::class)->raw());

        $this->assertNotEmpty($this->groupSession->fresh()->members);
    }
}
