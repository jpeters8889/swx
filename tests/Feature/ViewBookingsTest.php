<?php

namespace Tests\Feature;

use App\Events\SessionCreated;
use App\Models\Group;
use App\Models\GroupSession;
use App\Models\Member;
use App\Models\MemberBooking;
use App\Models\MemberLookup;
use App\Models\Session;
use App\Models\User;
use Carbon\Carbon;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Support\Facades\Event;
use Illuminate\Support\Facades\Notification;
use Illuminate\Support\Str;
use Spatie\TestTime\TestTime;
use Tests\TestCase;

class ViewBookingsTest extends TestCase
{
    use RefreshDatabase;

    protected MemberLookup $lookup;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        Event::fake(SessionCreated::class);
        Notification::fake();
        TestTime::freeze();

        factory(Group::class)->create(['name' => 'Test Group', 'user_id' => factory(User::class)->create(['name' => 'Jamie Peters'])]);
        factory(Session::class)->create(['group_id' => 1, 'start_at' => '11:30']);

        GroupSession::query()->create([
            'group_id' => 1,
            'session_id' => 1,
            'date' => Carbon::tomorrow(),
        ]);

        factory(Member::class)->create([
            'email' => 'jamie@jamie-peters.co.uk',
            'name' => 'Alison Wheatley',
        ]);

        MemberBooking::query()->create(['member_id' => 1, 'group_session_id' => 1]);

        $this->lookup = MemberLookup::query()->create([
            'member_id' => 1
        ]);
    }

    /** @test */
    public function it_errors_if_we_try_to_access_the_page_with_an_invalid_key()
    {
        $this->get('/lookup/foo')->assertStatus(404);
    }

    /** @test */
    public function it_errors_if_we_access_the_page_with_an_expired_key()
    {
        TestTime::addMinutes($this->lookup::EXPIRY_MINUTES);

        $this->get('/lookup/' . $this->lookup->key)->assertStatus(404);
    }

    /** @test */
    public function it_returns_success_when_we_access_the_page_with_a_valid_key()
    {
        $this->withoutExceptionHandling();
        $this->get('/lookup/' . $this->lookup->key)->assertStatus(200);
    }

    /** @test */
    public function it_shows_upcoming_bookings()
    {
        $this->get('/lookup/' . $this->lookup->key)
            ->assertSee('Upcoming Bookings')
            ->assertSee('Test Group')
            ->assertSee('Jamie')
            ->assertSee('Alison Wheatley')
            ->assertSee(Carbon::tomorrow()->format('D jS M'))
            ->assertSee('11:30am');
    }

    /** @test */
    public function it_shows_no_upcoming_bookings_when_none_available()
    {
        TestTime::addDays(2);
        MemberLookup::query()->first()
            ->update(['valid_until' => Carbon::now()->addMinute()]);

        $this->get('/lookup/' . $this->lookup->key)
            ->assertSee('No upcoming bookings...');
    }

    /** @test */
    public function it_shows_no_past_bookings_when_none_are_available()
    {
        $this->get('/lookup/' . $this->lookup->key)
            ->assertSee('No previous bookings...');
    }

    /** @test */
    public function it_shows_previous_bookings_when_it_is_available()
    {
        TestTime::addDays(2);
        MemberLookup::query()->first()
            ->update(['valid_until' => Carbon::now()->addMinute()]);

        $this->get('/lookup/' . $this->lookup->key)
            ->assertSee('Previous Bookings')
            ->assertSee('Test Group')
            ->assertSee('Jamie')
            ->assertSee('Alison Wheatley')
            ->assertSee(Carbon::today()->subDay()->format('D jS M'))
            ->assertSee('11:30am');
    }

    /** @test */
    public function it_shows_a_cancel_button_with_upcoming_bookings()
    {
        $this->get('/lookup/' . $this->lookup->key)
            ->assertSee('<cancel-session :id="1" token="'.$this->lookup->key.'"></cancel-session>', false);
    }

    /** @test */
    public function it_doesnt_show_a_cancel_button_when_theres_no_upcoming_bookings()
    {
        TestTime::addDays(2);
        MemberLookup::query()->first()
            ->update(['valid_until' => Carbon::now()->addMinute()]);

        $this->get('/lookup/' . $this->lookup->key)->assertDontSee('<cancel-booking');
    }
}
