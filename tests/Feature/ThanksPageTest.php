<?php

namespace Tests\Feature;

use App\Events\SessionCreated;
use App\Models\Group;
use App\Models\GroupSession;
use App\Models\Member;
use App\Models\MemberBooking;
use App\Models\Session;
use App\Models\User;
use Carbon\Carbon;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Support\Facades\Event;
use Illuminate\Support\Facades\Notification;
use Tests\TestCase;

class ThanksPageTest extends TestCase
{
    use RefreshDatabase;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        Event::fake(SessionCreated::class);
        Notification::fake();

        factory(Group::class)->create(['name' => 'Test Group', 'user_id' => factory(User::class)->create(['name' => 'Alison Wheatley'])]);
        factory(Session::class)->create(['group_id' => 1, 'start_at' => '11:30']);

        GroupSession::query()->create([
            'group_id' => 1,
            'session_id' => 1,
            'date' => Carbon::parse('2020-08-01'),
        ]);

        Member::query()->create([
            'name' => 'Jamie Peters',
            'email' => 'jamie@jamie-peters.co.uk',
            'phone' => '123456',
        ]);

        MemberBooking::query()->create(['member_id' => 1, 'group_session_id' => 1]);
    }

    /** @test */
    public function it_redirects_to_the_home_page_when_the_session_isnt_set()
    {
        $this->get('/thanks')->assertRedirect(config('app.url'));
    }

    public function makeRequest()
    {
        return $this->withSession(['booking_id' => 1])->get('/thanks');
    }

    /** @test */
    public function it_loads_the_page_with_the_session_in_place()
    {
        $this->makeRequest()->assertStatus(200);
    }

    /** @test */
    public function it_shows_the_booking_details()
    {
        /** @var MemberBooking $booking */
        $booking = MemberBooking::query()->first();

        $this->makeRequest()
            ->assertSee($booking->groupSession->group->name)
            ->assertSee($booking->groupSession->group->user->first_name)
            ->assertSee($booking->groupSession->date->format('l jS F Y'))
            ->assertSee($booking->groupSession->session->human_start_time)
            ->assertSee("href=\"/{$booking->groupSession->group->slug}\">", false);
    }
}
