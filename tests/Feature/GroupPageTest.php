<?php

namespace Tests\Feature;

use App\Events\SessionCreated;
use App\Models\Group;
use App\Models\GroupSession;
use App\Models\Session;
use App\Models\User;
use Carbon\Carbon;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Support\Facades\Event;
use Illuminate\Testing\TestResponse;
use Tests\TestCase;

class GroupPageTest extends TestCase
{
    use RefreshDatabase;

    protected Group $group;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        Event::fake(SessionCreated::class);

        $this->group = factory(Group::class)->create(['user_id' => factory(User::class)->create()]);

        factory(Session::class)->create(['group_id' => 1, 'day_id' => 1, 'start_at' => '17:00']);
        factory(Session::class)->create(['group_id' => 1, 'day_id' => 1, 'start_at' => '18:00']);

        factory(Session::class)->create(['group_id' => 1, 'day_id' => 2, 'start_at' => '09:30']);
        factory(Session::class)->create(['group_id' => 1, 'day_id' => 2, 'start_at' => '10:30']);

        $sessionOneStart = Carbon::today();
        $sessionTwoStart = Carbon::today()->addDays(3);

        for($x = 0; $x < 3; $x++) {
            GroupSession::query()->create([
                'group_id' => 1,
                'session_id' => 1,
                'date' => $sessionOneStart->addWeek(),
            ]);

            GroupSession::query()->create([
                'group_id' => 1,
                'session_id' => 2,
                'date' => $sessionTwoStart->addWeek(),
            ]);
        }
    }

    /** @test */
    public function it_errors_if_the_group_doesnt_exist()
    {
        $this->get('/foo')->assertStatus(404);
    }

    protected function makeRequest(): TestResponse
    {
        return $this->get("/{$this->group->slug}");
    }

    /** @test */
    public function it_loads_the_group_page()
    {
        $this->makeRequest()->assertStatus(200);
    }

    /** @test */
    public function it_shows_the_group_title()
    {
        $this->makeRequest()->assertSee($this->group->name);
    }

    /** @test */
    public function it_shows_the_group_user()
    {
        $this->makeRequest()->assertSee($this->group->user->first_name);
    }

    /** @test */
    public function it_shows_the_group_dates()
    {
        $request = $this->makeRequest();

        $sessionOneStart = Carbon::today();
        $sessionTwoStart = Carbon::today()->addDays(3);

        for($x = 0; $x < 3; $x++) {
            $request->assertSee($sessionOneStart->addWeek()->format('l jS F'));
            $request->assertSee($sessionTwoStart->addWeek()->format('l jS F'));
        }
    }

    /** @test */
    public function it_shows_the_group_times()
    {
        $request = $this->makeRequest();

        $this->group->groupSessions->each(static function(GroupSession $groupSession) use ($request) {
            $request->assertSee($groupSession->session->human_start_time);
        });
    }
}
