<?php

namespace Tests\Feature;

use App\Events\SessionCreated;
use App\Models\Group;
use App\Models\GroupSession;
use App\Models\Member;
use App\Models\Session;
use App\Models\User;
use Carbon\Carbon;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Support\Facades\Event;
use Tests\TestCase;

class MemberBookTest extends TestCase
{
    use RefreshDatabase;
    use WithFaker;

    protected Group $group;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        Event::fake(SessionCreated::class);
        $this->setUpFaker();

        $this->group = factory(Group::class)->create(['user_id' => factory(User::class)->create()]);
        factory(Session::class)->create(['group_id' => 1]);

        GroupSession::query()->create([
           'group_id' => 1,
           'session_id' => 1,
           'date' => Carbon::today(),
        ]);
    }

    /** @test */
    public function it_errors_if_the_group_doesnt_exist()
    {
        $this->post('/foo/1')->assertStatus(404);
    }

    /** @test */
    public function it_errors_if_the_session_doesnt_belong_to_the_group()
    {
        $this->post("/{$this->group->slug}/123")->assertStatus(404);
    }

    /** @test */
    public function it_errors_if_there_isnt_a_name()
    {
        $this->makeRequest('')->assertStatus(422);
    }

    /** @test */
    public function it_errors_if_it_is_a_new_member_session_and_we_dont_pass_a_phone_number()
    {
        $this->makeRequest('jamie')->assertStatus(200);

        Session::query()->first()->update(['new_member_session' => 1]);

        $this->makeRequest('jamie')->assertStatus(422);
    }

    /** @test */
    public function it_errors_if_the_session_is_full()
    {
        factory(Member::class)->create(['group_session_id' => 1]);
        Session::query()->first()->update(['capacity' => 1]);

        $this->makeRequest()->assertStatus(422);
    }

    /** @test */
    public function it_adds_the_member_to_the_database()
    {
        $groupSession = GroupSession::query()->first();

        $this->assertEmpty($groupSession->members);

        $this->makeRequest('Jamie');

        $this->assertNotEmpty($groupSession->fresh()->members);

        $this->assertEquals('Jamie', Member::query()->first()->name);
        $this->assertNull(Member::query()->first()->phone);
    }

    /** @test */
    public function it_stores_the_phone_number()
    {
        $this->makeRequest('Jamie', '123456');

        $this->assertNotNull($phone = Member::query()->first()->phone);
        $this->assertEquals('123456', $phone);
    }

    protected function makeRequest($name = null, $phone = null)
    {
        return $this->post("/{$this->group->slug}/1", [
            'name' => $name ?? $this->faker->name,
            'phone' => $phone
        ]);
    }
}
